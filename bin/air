#!/usr/bin/env ruby
# vi: set ft=ruby

require 'thor'
require 'csv'

require_relative '../lib/air'
# require File.expand_path('../lib/air', __FILE__)

class AirCommands < Thor
  desc 'list', 'print a list of topics'
  def list path=nil

    write_dest = if path.nil?
      $stdout
    else
      puts "Writing topic data to '#{path}'"
      File.open(path, 'w')
    end

    CSV(write_dest) do |out|
      out << [ :id, :title, :description, :score ]

      Air::Topic.all.each do |t|
        out << [t.id, t.title, t.description, t.score]
      end
    end

  end

  desc 'jordan', "he's on fire"
  def jordan
    puts <<-EOS
      _____________________________$$$$
      ____________________________$$$$$$
      ____________________________$$$$$$
      _____________________________$$$$
      _____________________________$$
      _____________________________$$
      ____________________________$$$
      ____________________________$$$
      _____________________$$$$___$$$
      _____________________$$$$$_$$$
      _____________________$$$$$$$$
      ______________________$$$$$$
      ____________________$$$$$$$$
      ___________________$$$$$$$$$$
      __________________$$$$$$$$$$$
      _________________$$$__$$$$$$$
      ________________$$$____$$$$$$
      _______________$$_____$$$$$$$
      _____________$$$_____$$$$$$$$$
      ____________$$$_$___$$$$$$$$$$$
      __________________$$$$$$$$$$$$$$$_
      ________________$$$$$$$$_$$$$$$$$$$
      ______________$$$$$$$________$$$$$$$$$
      ___________$$$$$$$_______________$$$$$$$
      _________$$$$$$_____________________$$$$$$
      _______$$$$$__________________________$$$$$
      _____$$$$$______________________________$$$$$$_$$
      $$$$$$$___________________________________$$$$$$$
      _$$$$$______________________________________$$
      ░▐█▀▄─ ▄▀▄ ▄▀▀ █─▄▀ █▀▀ ▀█▀ █▀▄ ▄▀▄ █── █ 
      ░▐█▀▀▄ █▀█ ─▀▄ █▀▄─ █▀▀ ─█─ █▀█ █▀█ █─▄ █─▄ 
      ░▐█▄▄▀ ▀─▀ ▀▀─ ▀─▀▀ ▀▀▀ ─▀─ ▀▀─ ▀─▀ ▀▀▀ ▀▀▀
    EOS
  end

  # If you didn't want a command to be public ...
  #no_commands do
  #  def helper
  #  end
  #end
end

AirCommands.start
